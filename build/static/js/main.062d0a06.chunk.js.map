{"version":3,"sources":["SubList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["flatten2d","arr","result","i","length","concat","SubList","props","theme","useTheme","indent","f","folder","React","useState","Array","folders","fill","opens","setOpens","files","onLoad","fresh","List","component","disablePadding","ListItem","button","style","paddingLeft","spacing","Skeleton","variant","width","height","map","index","onClick","value","handleClick","ListItemIcon","ListItemText","primary","name","Collapse","in","timeout","unmountOnExit","file","slice","search","window","location","drawerWidth","useStyles","makeStyles","createStyles","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","github","marginBottom","getPath","parent","getFolderData","callback","query","getQuery","request","XMLHttpRequest","url","git","gitlab","id","encodeURI","open","token","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","forEach","item","type","push","send","hljs","require","md","html","highlight","str","lang","getLanguage","__","utils","escapeHtml","mk","contentProcess","preUrl","aftUrl","array","mdExpression","start","newContent","exec","lastIndex","replace","imgExpression","vars","substring","split","pair","undefined","GetHostUrl","document","toString","App","classes","mobileOpen","setMobileOpen","handleDrawerToggle","handleFileClick","console","log","setTitle","setContent","setCurrentFile","currentFile","title","freshCount","setFreshCount","githubRepo","setGithubRepo","githubToken","setGithubToken","gitlabHost","setGitlabHost","gitlabId","setGitlabId","className","color","alignItems","Typography","noWrap","Divider","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","dangerouslySetInnerHTML","__html","render","href","noValidate","autoComplete","TextField","onChange","e","target","label","Button","fontSize","use","throwOnError","errorColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","rel","crossOrigin","defer","src","getElementById"],"mappings":"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","file":"static/js/main.062d0a06.chunk.js","sourcesContent":["import React from 'react'\r\nimport FolderIcon from '@material-ui/icons/Folder'\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile'\r\nimport MdIcon from '@material-ui/icons/Description';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nimport { Folder, File } from './template'\r\n\r\ninterface Props {\r\n    indent?: number\r\n    folder: Folder\r\n    fresh: () => void\r\n    onClick: (file: File) => void\r\n    onLoad?: (files: File[]) => void\r\n}\r\n\r\nfunction flatten2d(arr: JSX.Element[][]) {\r\n    let result = [] as JSX.Element[]\r\n    for (var i = 0; i < arr.length; i++) {\r\n        result = result.concat(arr[i])\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isMarkdown(name: string) {\r\n    if (name.length >= 3 && name.slice(name.length - 3, name.length) === '.md') {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default function SubList(props: Props) {\r\n    const theme = useTheme()\r\n    const indent = props.indent ? props.indent : 2\r\n    const f = props.folder\r\n\r\n    const [opens, setOpens] = React.useState(\r\n        Array(typeof (f.folders) === 'function' ? 0 : f.folders.length).fill(false) as boolean[]\r\n    )\r\n\r\n    function handleClick(index: number) {\r\n        setOpens(opens.map((value, i) => index === i ? !value : value))\r\n    }\r\n\r\n    if (typeof (f.folders) === 'function') {\r\n        f.folders(f, (folders, files) => {\r\n            f.folders = folders\r\n            f.files = files\r\n            setOpens(Array(f.folders.length).fill(false))\r\n            if (props.onLoad) {\r\n                props.onLoad(files)\r\n            }\r\n            props.fresh()\r\n        })\r\n        return (\r\n            <List component=\"div\" disablePadding>\r\n                <ListItem button style={{ paddingLeft: theme.spacing(indent) }}>\r\n                    <Skeleton variant=\"text\" width={300} height={30} />\r\n                </ListItem>\r\n            </List>\r\n        )\r\n    } else {\r\n        return (\r\n            <List component=\"div\" disablePadding>\r\n                {\r\n                    flatten2d(f.folders.map((folder, index) => [\r\n                        <ListItem button\r\n                            onClick={() => handleClick(index)}\r\n                            key={index}\r\n                            style={{ paddingLeft: theme.spacing(indent) }}>\r\n                            <ListItemIcon>\r\n                                <FolderIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={folder.name} />\r\n                            {opens[index] ? <ExpandLess /> : <ExpandMore />}\r\n                        </ListItem>,\r\n                        <Collapse key={f.folders.length + index} in={opens[index]} timeout=\"auto\" unmountOnExit>\r\n                            <SubList indent={indent + 4} folder={folder} fresh={props.fresh} onClick={props.onClick} />\r\n                        </Collapse>\r\n                    ]))\r\n                }\r\n                {\r\n                    f.files.map((file, index) => (\r\n                        <ListItem button\r\n                            onClick={() => {props.onClick(file)}}\r\n                            key={2 * f.folders.length + index}\r\n                            style={{ paddingLeft: theme.spacing(indent) }}>\r\n                            <ListItemIcon>\r\n                                {isMarkdown(file.name) ? <MdIcon /> : <FileIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={file.name} />\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles'\r\n\r\nimport './App.css'\r\n\r\nimport SubList from './SubList'\r\n\r\nimport { Folder, File } from './template'\r\n\r\n// ---------------------------------------------------\r\nconst search = window.location.search\r\n// 请在这里更改你需要的 url 参数\r\n// const search = '?git=github&github=typoverflow/note'\r\n// ---------------------------------------------------\r\n\r\nconst drawerWidth = 300\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        appBar: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                marginLeft: drawerWidth,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3)\r\n        },\r\n        github: {\r\n            '& > *': {\r\n                marginRight: theme.spacing(2),\r\n                marginBottom: theme.spacing(1),\r\n            },\r\n        }\r\n    }),\r\n)\r\n\r\nfunction isMarkdown(name: string) {\r\n    if (name.length >= 3 && name.slice(name.length - 3, name.length) === '.md') {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction getPath(folder: Folder): string {\r\n    if (folder.parent) {\r\n        return getPath(folder.parent) + folder.name + '/'\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nfunction getFolderData(folder: Folder, callback: (folders: Folder[], files: File[]) => void) {\r\n    const query = getQuery()\r\n    const folders = [] as Folder[]\r\n    const files = [] as File[]\r\n    const request = new XMLHttpRequest()\r\n    let url = ''\r\n    if (query.git === 'gitlab') {\r\n        url = `https://${query.gitlab}/api/v4/projects/${query.id}/repository/tree?per_page=1000&ref=master&path=${encodeURI(getPath(folder))}`\r\n    } else {\r\n        url = `https://api.github.com/repos/${query.github}/contents/${encodeURI(getPath(folder))}`\r\n    }\r\n    request.open('GET', url)\r\n    if (query.token) {\r\n        request.setRequestHeader('Authorization', 'token ' + query.token)\r\n    }\r\n    request.onreadystatechange = function () {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            const tree = JSON.parse(request.responseText)\r\n            tree.forEach((item: any) => {\r\n                if (query.git === 'gitlab' ? item.type === 'tree' : item.type === 'dir') {\r\n                    folders.push({\r\n                        name: item.name,\r\n                        parent: folder,\r\n                        folders: getFolderData,\r\n                        files: []\r\n                    })\r\n                } else if (query.git === 'gitlab' ? item.type === 'blob' : item.type === 'file') {\r\n                    files.push({\r\n                        name: item.name,\r\n                        parent: folder\r\n                    })\r\n                }\r\n            })\r\n            callback(folders, files)\r\n        }\r\n    }\r\n    request.send(null)\r\n}\r\n\r\nconst folder = {\r\n    name: 'root',\r\n    parent: null,\r\n    folders: getFolderData,\r\n    files: []\r\n} as Folder\r\n\r\nconst hljs = require('highlight.js')\r\nconst md = require('markdown-it')({\r\n    html: true,\r\n    highlight: function (str: string, lang: string) {\r\n        if (lang && hljs.getLanguage(lang)) {\r\n            try {\r\n                return '<pre class=\"hljs\"><code>' +\r\n                    hljs.highlight(lang, str, true).value +\r\n                    '</code></pre>'\r\n            } catch (__) { }\r\n        }\r\n        return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>'\r\n    }\r\n})\r\nconst mk = require('@iktakahiro/markdown-it-katex')\r\nmd.use(mk, {\r\n    throwOnError: false,\r\n    errorColor: \"#cc0000\",\r\n})\r\n\r\n\r\nfunction contentProcess(content: string, file: File | null): string {\r\n    if (file) {\r\n        const query = getQuery()\r\n        let preUrl = ''\r\n        let aftUrl = ''\r\n        if (query.git === 'gitlab') {\r\n            preUrl = `https://${query.gitlab}/api/v4/projects/${query.id}/repository/files/`\r\n            aftUrl = '/raw?ref=master'\r\n        } else {\r\n            preUrl = `https://raw.githubusercontent.com/${query.github}/master/`\r\n            aftUrl = ''\r\n        }\r\n\r\n        // Markdown Image\r\n        const mdExpression = /!\\[([\\u4e00-\\u9fa5a-z0-9-_/. ]*)\\]\\((\\.\\/)?([\\u4e00-\\u9fa5a-z0-9-_/. ]*)\\)/g\r\n        let start = 0\r\n        let newContent = ''\r\n        let array\r\n        while ((array = mdExpression.exec(content)) !== null) {\r\n            newContent += content.slice(start, mdExpression.lastIndex - array[0].length)\r\n            newContent += `![${array[1]}](${preUrl}${query.git === 'gitlab' ?\r\n                encodeURI(getPath(file.parent) + array[3]).replace(/\\//g, '%2F') :\r\n                encodeURI(getPath(file.parent) + array[3])\r\n                }${aftUrl})`\r\n            start = mdExpression.lastIndex\r\n        }\r\n        newContent += content.slice(start, content.length)\r\n        content = newContent\r\n\r\n        // Html Image\r\n        const imgExpression = /<img +src=\"([\\u4e00-\\u9fa5a-z0-9-_/. ]*)\"([^>]*)>/g\r\n        start = 0\r\n        newContent = ''\r\n        while ((array = imgExpression.exec(content)) !== null) {\r\n            newContent += content.slice(start, imgExpression.lastIndex - array[0].length)\r\n            newContent += `<img src=\"${preUrl}${query.git === 'gitlab' ?\r\n                encodeURI(getPath(file.parent) + array[1]).replace(/\\//g, '%2F') :\r\n                encodeURI(getPath(file.parent) + array[1])\r\n                }${aftUrl}\"${array[2]}>`\r\n            start = imgExpression.lastIndex\r\n        }\r\n        newContent += content.slice(start, content.length)\r\n        content = newContent\r\n    }\r\n    return content\r\n}\r\n\r\ninterface Query {\r\n    [key: string]: string\r\n}\r\n\r\nfunction getQuery(): Query {\r\n    const result = {} as Query\r\n    if (search.length > 1) {\r\n        const query = search.substring(1)\r\n        const vars = query.split(\"&\")\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split(\"=\")\r\n            result[pair[0]] = pair[1]\r\n        }\r\n    }\r\n    if (result.git !== 'github' && result.git !== 'gitlab' && result.git !== undefined) {\r\n        result.git = 'github'\r\n    }\r\n    if (result.git === 'gitlab') {\r\n        if (!result.gitlab) {\r\n            result.gitlab = 'git.nju.edu.cn'\r\n            result.id = '2047'\r\n        }\r\n    } else {\r\n        if (!result.github) {\r\n            result.github = 'OrangeX4/NJUAI-Notes'\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction GetHostUrl() {\r\n    return document.location.toString().split(\"?\")[0]\r\n}\r\n\r\n\r\nexport default function App() {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const [mobileOpen, setMobileOpen] = React.useState(false)\r\n\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    function handleFileClick(file: File) {\r\n        setMobileOpen(false)\r\n        \r\n        const query = getQuery()\r\n        let preUrl = ''\r\n        let aftUrl = ''\r\n        if (query.git === 'gitlab') {\r\n            preUrl = `https://${query.gitlab}/api/v4/projects/${query.id}/repository/files/`\r\n            aftUrl = '/raw?ref=master'\r\n        } else {\r\n            preUrl = `https://raw.githubusercontent.com/${query.github}/master/`\r\n            aftUrl = ''\r\n        }\r\n        const url = `${preUrl}${query.git === 'gitlab' ?\r\n            encodeURI(getPath(file.parent) + file.name).replace(/\\//g, '%2F') :\r\n            encodeURI(getPath(file.parent) + file.name)\r\n        }${aftUrl}`\r\n        if (!isMarkdown(file.name)) {\r\n            console.log(window.location.search)\r\n            window.open(url, '_blank')\r\n            return\r\n        }\r\n        setTitle(file.name)\r\n        setContent('# 加载中...')\r\n        const request = new XMLHttpRequest()\r\n        request.open('GET', url)\r\n        request.onreadystatechange = function () {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                setCurrentFile(file)\r\n                setContent(request.responseText)\r\n            }\r\n        }\r\n        request.send(null)\r\n    }\r\n\r\n    // Load README.md\r\n    function handleLoad(files: File[]) {\r\n        files.forEach((file) => {\r\n            if (file.name === 'README.md') {\r\n                handleFileClick(file)\r\n            }\r\n        })\r\n    }\r\n\r\n    const [currentFile, setCurrentFile] = useState(null as File | null)\r\n    const [title, setTitle] = useState('GitNotes | OrangeX4\\'s Notes')\r\n    const [content, setContent] = useState('')\r\n\r\n    const [freshCount, setFreshCount] = useState(0)\r\n    const fresh = () => setFreshCount(freshCount + 1)\r\n\r\n\r\n    const [githubRepo, setGithubRepo] = useState('OrangeX4/NJUAI-Notes')\r\n    const [githubToken, setGithubToken] = useState('')\r\n    const [gitlabHost, setGitlabHost] = useState('git.nju.edu.cn')\r\n    const [gitlabId, setGitlabId] = useState('2047')\r\n\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} style={{ color: '#303030', display: 'flex', alignItems: 'center', paddingLeft: 16 }}>\r\n                <MenuIcon style={{ marginRight: 30 }} />\r\n                <Typography variant=\"h6\" noWrap>\r\n                    目录\r\n                </Typography>\r\n            </div>\r\n            <Divider />\r\n            {getQuery().git ? (\r\n                <SubList folder={folder} fresh={fresh} onClick={handleFileClick} onLoad={handleLoad} />\r\n            ) : (\r\n                null\r\n            )}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar} color='default'>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            {/* <main className={classes.content} style={{width: '100%'}}> */}\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {getQuery().git ? (\r\n                    <div dangerouslySetInnerHTML={{ __html: md.render(contentProcess(content, currentFile)) }} />\r\n                ) : (\r\n                    <div>\r\n                        <h1>这是什么?</h1>\r\n                        <p>这是一个由 <b>OrangeX4</b> 开发的<b>笔记浏览应用</b>, 用于浏览以 <b>Markdown</b> 书写的, 存放在 <b>GitLab 或 GitHub</b> 上的笔记.</p>\r\n                        <p>优点: <b>数学公式支持和移动端适配.</b></p>\r\n                        <a href=\"https://github.com/OrangeX4/GitNotes\">GitHub 地址</a>\r\n\r\n                        <h1>OrangeX4 的笔记</h1>\r\n                        <h2><a href=\"./?git=gitlab\">OrangeX4's Notes</a></h2>\r\n                        <h1>推荐的其他笔记</h1>\r\n                        <h2><a href=\"./?git=github&github=typoverflow/note\">Typoverflow's Notes</a></h2>\r\n                        <h2><a href=\"./?git=github&github=fengdu78/Coursera-ML-AndrewNg-Notes\">Coursera-ML-AndrewNg-Notes</a></h2>\r\n                        <h2><a href=\"./?git=github&github=fengdu78/Data-Science-Notes\">Data-Science-Notes</a></h2>\r\n\r\n                        <h1>GitHub Repo</h1>\r\n                        <form className={classes.github} noValidate autoComplete=\"off\">\r\n                            <TextField id=\"standard-basic\" value={githubRepo} onChange={(e) => setGithubRepo(e.target.value)} label=\"Repo\" />\r\n                            <TextField id=\"standard-basic\" value={githubToken} onChange={(e) => setGithubToken(e.target.value)} label=\"Token\" />\r\n                            <Button variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={() => { window.location.href = `${GetHostUrl()}?git=github&github=${githubRepo}${githubToken === '' ? '' : '&token=' + githubToken}` }}\r\n                                style={{ height: 50, width: 100, fontSize: 16 }}>浏览</Button>\r\n                        </form>\r\n                        <p>GitHub 对于 API 访问有一定的限制, 超过次数便需要 Token 才能继续浏览.</p>\r\n                        <p>详见 <a href=\"https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token\">创建 Token</a>.</p>\r\n\r\n                        <h1>GitLab Repo</h1>\r\n                        <form className={classes.github} noValidate autoComplete=\"off\">\r\n                            <TextField id=\"standard-basic\" value={gitlabHost} onChange={(e) => setGitlabHost(e.target.value)} label=\"Host\" />\r\n                            <TextField id=\"standard-basic\" value={gitlabId} onChange={(e) => setGitlabId(e.target.value)} label=\"Id\" />\r\n                            <Button variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={() => { window.location.href = `${GetHostUrl()}?git=gitlab&gitlab=${gitlabHost}&id=${gitlabId}` }}\r\n                                style={{ height: 50, width: 100, fontSize: 16 }}>浏览</Button>\r\n                        </form>\r\n                        <p>Host 是 GitLab 所在的域名, 如 \"gitlab.com\" 和 \"git.nju.edu.cn\".</p>\r\n                        <p>Id 是你要浏览的 GitLab 项目的 Id, 可以在项目页面上找到.</p>\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    )\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.11.1/katex.min.css\"></link>\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/atom-one-dark.min.css\" />\r\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/copy-tex.min.css\" crossOrigin=\"anonymous\"></link>\r\n        <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/copy-tex.min.js\" crossOrigin=\"anonymous\"></script>\r\n        <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/mhchem.min.js\" crossOrigin=\"anonymous\"></script>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}